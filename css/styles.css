 :root {
  --primary-color: #4C7A7A; /* (Myrtle Green) */
  --secondary-color: #868383; /* (Gray) */
  --tertiary-color: #82B0B0; /* (Dark Cyan) */
  --background-color: #FFFBF3; /* (Floral White) */
  --text-color: #2D2F2D; /* (Jet) */
  --visited-link-color: #551A8B; /* (Purple) */
  --active-link-color: #ff0000; /* (Red) */
  --primary-button-text-color: #fff; /* (White) */
  --secondary-button-text-color: #2D2F2D; /* (Jet) */
  --button-border-bottom: rgba(0, 0, 0, 0.3);
  --header-font-weight: 700;
}

 body {
    background-color: var(--background-color);
    font-family: "Poppins", sans-serif;
    font-weight: 400;
    font-size: 18px;
    color: var(--text-color);
    line-height: 1.5;
  }

h1 {
    font-size: 30px;
    font-weight: var(--header-font-weight);
    color: var(--primary-color);
  }
  
  h2 {
    font-size: 24px;
    font-weight: var(--header-font-weight);
    line-height: .5;
    color: var(--primary-color);
  }
  
  h3 {
    font-size: 18px;
    font-weight: var(--header-font-weight);
    color: var(--primary-color);
  }
  
  a {
    color: var(--primary-color);
  }
  
  a:visited {
    /* visited link */
    color: var(--visited-link-color);
  }

  a:hover, a:focus {
    /* No underlining when hovering over a link */
    text-decoration: none;
  }
  
  a:active {
    /* selected link */
    color: var(--active-link-color);
  }

  button {
    /* overwrites browser defaults and resets the border */
    border: none;
    /* takes the font from the outer container */
    font-family: inherit;
    /* styles the background color, font color, and text decoration (underline, etc.) of the button */
    background-color: var(--primary-color);
    color: var(--primary-button-text-color);
    text-decoration: none;
    /*adds spacing to the button (this will be discussed more in-depth later) */
    padding: 10px;
    border-radius: 3px;
    /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
    border-bottom: 2px solid var(--button-border-bottom);
  }

  .button, button {
      /* overwrites browser defaults and resets the border */
    border: none;
    display: inline-block;
      /* takes the font from the outer container */
    font-family: inherit;
      /* styles the button */
    background-color: var(--primary-color);
    color: var(--primary-button-text-color);
    text-decoration: none;
    padding: 10px;
    border-radius: 3px;
      /* width of the border, type, color */
    border-bottom: 2px solid var(--button-border-bottom);
    transition: opacity 0.2s;
  }

  .button__secondary {
    background-color: var(--tertiary-color);
    color: var(--secondary-button-text-color);
  }

  button:hover,
  button:focus,
  .button:hover,
  .button:focus {
  cursor: pointer; /* lets the mouse appear as a hand when hovering over the button */
  opacity: 0.8; /* reduces the opacity of the button to 80% */
}

.paragraph__secondary {
  line-height: 2;
}

* {
  box-sizing: border-box;
}



/* HEADER */

.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
  justify-content: center;
  align-items: center;
  border-bottom: 1px solid var(--primary-color);
}

.page-header__item {
  flex: 0 1 200px;
}

.page-header__item:first-child {
  max-width: 300px;
  height: 100%;
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.navigation-list {
  list-style-type: none;
  font-size: 20px;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

.navigation-list__item--active {
    text-decoration: none;
}


/* HOMEPAGE */

.profile {
  max-width: 700px;
  margin: 0 auto;
}

.profile__portrait {
    float: left;
    width: 100%;
    height: auto;
    max-width: 250px;
    margin-right: 40px;
    border-radius: 50%;
}

.profile__text {
	text-align: center;
}



/* ABOUT PAGE */

.about-page {
  text-align: center;
}


.about-page ul {
	padding: 0;
}

.about-page li {
	list-style: none;
}

.svg-container {
  text-align: right; /* Aligns the caption to the right inside the container */
  margin: 0 auto; /* Horizontally centers the container */
}

.hometown-svg {
  display: block; /* Makes the SVG a block element so it sits above the caption */
  margin: 0 auto; /* Optional: center the SVG itself if desired */
}

.svg-caption {
  margin-top: 6px; /* Adds some spacing between the SVG and the caption */
  margin-right: 8px;
  font-size: 16px;
}



/* CONTACT PAGE */

.contact-page {
  text-align: center;  
}


/* FOOTER */

.page-footer {
    clear: both;
    display: flex;
    flex-direction: column;
    text-align: center;
}



  /* start grid fallback */

.grid__item {
  display: inline-block;
  width: 33%;
 }
 /* end grid fallback */



/* MEDIA QUERIES */

 @supports (display: grid) {
  .grid {
    display: grid;
    /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
    margin: 0;
 
  }
  
  .grid__item {
    background-color: var(--tertiary-color);
    width: auto;
    min-height: auto;
    margin: 0;
    transition: transform 0.2s ease; /* Add a smooth transition for the transform property */
  }

  .grid__item:last-child {
    grid-column: 3 / 3;
    grid-row: 1 / 3;
  }

 }

 /* Define the hover effect */
 .grid__item:hover {
  transform: scale(1.05); /* Increase the size by 5% on hover */
  cursor: pointer; /* This changes the cursor to a pointing hand on hover */
 }


 @media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
    grid-gap: 10px;
  }
  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }
  h1 {
    font-size: 22px;
  }
}


/* ANIMATIONS */

@keyframes color-change {
  0% {
    fill: #EFCF9D;
  }
  50% {
    fill: #C43030;
  }
  100% {
    fill: #5E1451;
  }
}

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}

.sun {
  animation: 5s color-change infinite alternate linear;
}

.cloud-right, .cloud-left, .cloud-middle {
  animation: 5s cloud-move infinite alternate linear;
}